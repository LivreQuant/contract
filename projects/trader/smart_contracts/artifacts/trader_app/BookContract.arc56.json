{
    "name": "BookContract",
    "structs": {},
    "methods": [
        {
            "name": "initialize",
            "args": [
                {
                    "type": "byte[]",
                    "name": "user_id"
                },
                {
                    "type": "byte[]",
                    "name": "book_id"
                },
                {
                    "type": "byte[]",
                    "name": "parameters"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Initialize the contract with required parameters.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_in",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "desc": "Handle user opt-in to the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "close_out",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "CloseOut"
                ]
            },
            "readonly": false,
            "desc": "Handle user closing out from the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update_global",
            "args": [
                {
                    "type": "byte[]",
                    "name": "new_user_id"
                },
                {
                    "type": "byte[]",
                    "name": "new_book_id"
                },
                {
                    "type": "account",
                    "name": "new_address"
                },
                {
                    "type": "byte[]",
                    "name": "new_params"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Update the global parameters of the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update_status",
            "args": [
                {
                    "type": "string",
                    "name": "new_status"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Update the status of the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update_local",
            "args": [
                {
                    "type": "byte[]",
                    "name": "book_hash"
                },
                {
                    "type": "byte[]",
                    "name": "research_hash"
                },
                {
                    "type": "byte[]",
                    "name": "params"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Update the local state for the user.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "delete_application",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "desc": "Delete the contract if it's inactive.",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 8
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "g_user_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Z191c2VyX2lk"
                },
                "g_book_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Z19ib29rX2lk"
                },
                "g_address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "Z19hZGRyZXNz"
                },
                "g_status": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "Z19zdGF0dXM="
                },
                "g_params": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Z19wYXJhbXM="
                },
                "l_book_hash": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "bF9ib29rX2hhc2g="
                },
                "l_research_hash": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "bF9yZXNlYXJjaF9oYXNo"
                },
                "l_params": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "bF9wYXJhbXM="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        639
                    ],
                    "errorMessage": "At least one parameter must change"
                },
                {
                    "pc": [
                        447,
                        477,
                        604
                    ],
                    "errorMessage": "Contract must be active"
                },
                {
                    "pc": [
                        714
                    ],
                    "errorMessage": "Contract must be inactive to delete"
                },
                {
                    "pc": [
                        545
                    ],
                    "errorMessage": "New parameters must be different"
                },
                {
                    "pc": [
                        294
                    ],
                    "errorMessage": "OnCompletion is not CloseOut"
                },
                {
                    "pc": [
                        176
                    ],
                    "errorMessage": "OnCompletion is not DeleteApplication"
                },
                {
                    "pc": [
                        193,
                        228,
                        251,
                        329
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        312
                    ],
                    "errorMessage": "OnCompletion is not OptIn"
                },
                {
                    "pc": [
                        469
                    ],
                    "errorMessage": "Only authorized user can close out"
                },
                {
                    "pc": [
                        439
                    ],
                    "errorMessage": "Only authorized user can opt in"
                },
                {
                    "pc": [
                        596
                    ],
                    "errorMessage": "Only authorized user can update local state"
                },
                {
                    "pc": [
                        666
                    ],
                    "errorMessage": "Only creator can delete application"
                },
                {
                    "pc": [
                        500
                    ],
                    "errorMessage": "Only creator can supdate parameters"
                },
                {
                    "pc": [
                        579
                    ],
                    "errorMessage": "Only creator can update status"
                },
                {
                    "pc": [
                        369
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        179,
                        196,
                        231,
                        254,
                        297,
                        315,
                        332
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        437,
                        467,
                        526,
                        594
                    ],
                    "errorMessage": "check self.g_address exists"
                },
                {
                    "pc": [
                        516
                    ],
                    "errorMessage": "check self.g_book_id exists"
                },
                {
                    "pc": [
                        537
                    ],
                    "errorMessage": "check self.g_params exists"
                },
                {
                    "pc": [
                        443,
                        473,
                        600,
                        670,
                        693
                    ],
                    "errorMessage": "check self.g_status exists"
                },
                {
                    "pc": [
                        505
                    ],
                    "errorMessage": "check self.g_user_id exists"
                },
                {
                    "pc": [
                        609
                    ],
                    "errorMessage": "check self.l_book_hash exists"
                },
                {
                    "pc": [
                        631
                    ],
                    "errorMessage": "check self.l_params exists"
                },
                {
                    "pc": [
                        620
                    ],
                    "errorMessage": "check self.l_research_hash exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAAEmCwQVH3x1CGdfc3RhdHVzCWdfYWRkcmVzcwNOQU4GQUNUSVZFC2xfYm9va19oYXNoD2xfcmVzZWFyY2hfaGFzaAhsX3BhcmFtcwlnX3VzZXJfaWQJZ19ib29rX2lkCGdfcGFyYW1zMRtBAPiCBwQjJfmvBIeJvNsEq+ecHwSK9n9QBPqYq98Eodgb0wQgvvX3NhoAjgcAnQCLAHgATwA4ABUAAiJDMRmBBRJEMRhEiAHeFihMULAjQzEZFEQxGEQ2GgFXAgA2GgJXAgA2GgNXAgCIAXAWKExQsCNDMRkURDEYRDYaAVcCAIgBShYoTFCwI0MxGRREMRhENhoBVwIANhoCVwIANhoDF8AcNhoEVwIAiADSFihMULAjQzEZgQISRDEYRIgAoRYoTFCwI0MxGSMSRDEYRIgAcRYoTFCwI0MxGRREMRhENhoBVwIANhoCVwIANhoDVwIAiAASFihMULAjQzEZQP87MRgURCNDigMBJwiL/WcnCYv+ZyqAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZycKi/9nKScEZyOJMQAiKmVEEkQiKWVEJwQSRCcFK2cnBitnJwcrZyOJMQAiKmVEEkQiKWVEJwQSRCcFK2cnBitnJwcrZyOJigQBMQAyCRJEIicIZUSL/BNAACAiJwllRIv9E0AAFSIqZUSL/hNAAAsiJwplRIv/E0EAFyNEJwiL/GcnCYv9ZyqL/mcnCov/ZyOJIkL/5ooBATEAMgkSRCmL/2cjiYoDATEAIiplRBJEIillRCcEEkQiJwVlRIv9E0AAFiInBmVEi/4TQAALIicHZUSL/xNBABMjRCcFi/1nJwaL/mcnB4v/ZyOJIkL/6jEAMgkSRCIpZUSADUlOQUNUSVZFLVNUT1ASQAAXIillRIANSU5BQ1RJVkUtU09MRBJBAAQjRCOJIkL/+Q==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 8,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}