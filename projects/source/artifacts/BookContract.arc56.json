{
    "name": "BookContract",
    "structs": {},
    "methods": [
        {
            "name": "initialize",
            "args": [
                {
                    "type": "byte[]",
                    "name": "user_id"
                },
                {
                    "type": "byte[]",
                    "name": "book_id"
                },
                {
                    "type": "byte[]",
                    "name": "parameters"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Initialize the contract with required parameters.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_in",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "desc": "Handle user opt-in to the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "close_out",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "CloseOut"
                ]
            },
            "readonly": false,
            "desc": "Handle user closing out from the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update_global",
            "args": [
                {
                    "type": "byte[]",
                    "name": "new_user_id"
                },
                {
                    "type": "byte[]",
                    "name": "new_book_id"
                },
                {
                    "type": "account",
                    "name": "new_address"
                },
                {
                    "type": "byte[]",
                    "name": "new_params"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Update the global parameters of the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update_status",
            "args": [
                {
                    "type": "string",
                    "name": "new_status"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Update the status of the contract.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update_local",
            "args": [
                {
                    "type": "byte[]",
                    "name": "book_hash"
                },
                {
                    "type": "byte[]",
                    "name": "research_hash"
                },
                {
                    "type": "byte[]",
                    "name": "params"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Update the local state for the user.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "delete_application",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "desc": "Delete the contract if it's inactive.",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 5
            },
            "local": {
                "ints": 0,
                "bytes": 3
            }
        },
        "keys": {
            "global": {
                "g_user_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "dXNlcl9pZA=="
                },
                "g_book_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ym9va19pZA=="
                },
                "g_address": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "YWRkcmVzcw=="
                },
                "g_status": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "c3RhdHVz"
                },
                "g_params": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "cGFyYW1z"
                }
            },
            "local": {
                "l_book_hash": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ym9va19oYXNo"
                },
                "l_research_hash": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "cmVzZWFyY2hfaGFzaA=="
                },
                "l_params": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "cGFyYW1z"
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        },
        "global": {},
        "local": {}
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        634
                    ],
                    "errorMessage": "At least one parameter must change"
                },
                {
                    "pc": [
                        423,
                        461,
                        594
                    ],
                    "errorMessage": "Contract must be active"
                },
                {
                    "pc": [
                        714
                    ],
                    "errorMessage": "Contract must be inactive to delete"
                },
                {
                    "pc": [
                        536
                    ],
                    "errorMessage": "New parameters must be different"
                },
                {
                    "pc": [
                        271
                    ],
                    "errorMessage": "OnCompletion is not CloseOut"
                },
                {
                    "pc": [
                        153
                    ],
                    "errorMessage": "OnCompletion is not DeleteApplication"
                },
                {
                    "pc": [
                        170,
                        205,
                        228,
                        306
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        289
                    ],
                    "errorMessage": "OnCompletion is not OptIn"
                },
                {
                    "pc": [
                        453
                    ],
                    "errorMessage": "Only authorized user can close out"
                },
                {
                    "pc": [
                        415
                    ],
                    "errorMessage": "Only authorized user can opt in"
                },
                {
                    "pc": [
                        586
                    ],
                    "errorMessage": "Only authorized user can update local state"
                },
                {
                    "pc": [
                        666
                    ],
                    "errorMessage": "Only creator can delete application"
                },
                {
                    "pc": [
                        492
                    ],
                    "errorMessage": "Only creator can supdate parameters"
                },
                {
                    "pc": [
                        569
                    ],
                    "errorMessage": "Only creator can update status"
                },
                {
                    "pc": [
                        346
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        156,
                        173,
                        208,
                        231,
                        274,
                        292,
                        309
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        413,
                        451,
                        518,
                        584
                    ],
                    "errorMessage": "check self.g_address exists"
                },
                {
                    "pc": [
                        508
                    ],
                    "errorMessage": "check self.g_book_id exists"
                },
                {
                    "pc": [
                        528
                    ],
                    "errorMessage": "check self.g_params exists"
                },
                {
                    "pc": [
                        419,
                        457,
                        590,
                        670,
                        693
                    ],
                    "errorMessage": "check self.g_status exists"
                },
                {
                    "pc": [
                        497
                    ],
                    "errorMessage": "check self.g_user_id exists"
                },
                {
                    "pc": [
                        601
                    ],
                    "errorMessage": "check self.l_book_hash exists for account"
                },
                {
                    "pc": [
                        626
                    ],
                    "errorMessage": "check self.l_params exists for account"
                },
                {
                    "pc": [
                        614
                    ],
                    "errorMessage": "check self.l_research_hash exists for account"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAAEmCgQVH3x1BnBhcmFtcwZzdGF0dXMHYWRkcmVzcwNOQU4GQUNUSVZFCWJvb2tfaGFzaA1yZXNlYXJjaF9oYXNoB3VzZXJfaWQHYm9va19pZDEbQQD4ggcEIyX5rwSHibzbBKvnnB8EivZ/UAT6mKvfBKHYG9MEIL719zYaAI4HAJ0AiwB4AE8AOAAVAAIiQzEZgQUSRDEYRIgB9RYoTFCwI0MxGRREMRhENhoBVwIANhoCVwIANhoDVwIAiAF9FihMULAjQzEZFEQxGEQ2GgFXAgCIAVcWKExQsCNDMRkURDEYRDYaAVcCADYaAlcCADYaAxfAHDYaBFcCAIgA4RYoTFCwI0MxGYECEkQxGESIAKgWKExQsCNDMRkjEkQxGESIAHAWKExQsCNDMRkURDEYRDYaAVcCADYaAlcCADYaA1cCAIgAEhYoTFCwI0MxGUD/OzEYFEQjQ4oDAScIi/1nJwmL/mcrgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGcpi/9nKicFZyOJMQAiK2VEEkQiKmVEJwUSRDEAJwYnBGYxACcHJwRmMQApJwRmI4kxACIrZUQSRCIqZUQnBRJEMQAnBicEZjEAJwcnBGYxACknBGYjiYoEATEAMgkSRCInCGVEi/wTQAAfIicJZUSL/RNAABQiK2VEi/4TQAAKIillRIv/E0EAFiNEJwiL/GcnCYv9ZyuL/mcpi/9nI4kiQv/nigEBMQAyCRJEKov/ZyOJigMBMQAiK2VEEkQiKmVEJwUSRDEAIicGY0SL/RNAABkxACInB2NEi/4TQAAMMQAiKWNEi/8TQQAYI0QxACcGi/1mMQAnB4v+ZjEAKYv/ZiOJIkL/5TEAMgkSRCIqZUSADUlOQUNUSVZFLVNUT1ASQAAXIiplRIANSU5BQ1RJVkUtU09MRBJBAAQjRCOJIkL/+Q==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 8,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {},
    "schema": {
        "global": {
            "num_byte_slices": 5,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 3,
            "num_uints": 0
        }
    },
    "contract": {
        "name": "BookContract",
        "methods": [
            {
                "name": "initialize",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "user_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "book_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "parameters"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "NoOp"
                    ]
                },
                "readonly": false,
                "desc": "Initialize the contract with required parameters.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "opt_in",
                "args": [],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "OptIn"
                    ]
                },
                "readonly": false,
                "desc": "Handle user opt-in to the contract.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "close_out",
                "args": [],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "CloseOut"
                    ]
                },
                "readonly": false,
                "desc": "Handle user closing out from the contract.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "update_global",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "new_user_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "new_book_id"
                    },
                    {
                        "type": "account",
                        "name": "new_address"
                    },
                    {
                        "type": "byte[]",
                        "name": "new_params"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "NoOp"
                    ]
                },
                "readonly": false,
                "desc": "Update the global parameters of the contract.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "update_status",
                "args": [
                    {
                        "type": "string",
                        "name": "new_status"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "NoOp"
                    ]
                },
                "readonly": false,
                "desc": "Update the status of the contract.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "update_local",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "book_hash"
                    },
                    {
                        "type": "byte[]",
                        "name": "research_hash"
                    },
                    {
                        "type": "byte[]",
                        "name": "params"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "NoOp"
                    ]
                },
                "readonly": false,
                "desc": "Update the local state for the user.",
                "events": [],
                "recommendations": {}
            },
            {
                "name": "delete_application",
                "args": [],
                "returns": {
                    "type": "uint64"
                },
                "actions": {
                    "create": [],
                    "call": [
                        "DeleteApplication"
                    ]
                },
                "readonly": false,
                "desc": "Delete the contract if it's inactive.",
                "events": [],
                "recommendations": {}
            }
        ],
        "desc": "Contract BookContract",
        "networks": {}
    },
    "hints": {
        "initialize(byte[],byte[],byte[])uint64": {},
        "opt_in()uint64": {},
        "close_out()uint64": {},
        "update_global(byte[],byte[],account,byte[])uint64": {},
        "update_status(string)uint64": {},
        "update_local(byte[],byte[],byte[])uint64": {},
        "delete_application()uint64": {}
    }
}